# Generated by Django 5.1.6 on 2025-06-12 23:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppGlobalSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Unique name for the setting (e.g., 'BLADE_SIZE_MM').", max_length=255, unique=True)),
                ('decimal_value', models.DecimalField(blank=True, decimal_places=2, help_text='Value for decimal-type settings.', max_digits=10, null=True)),
                ('string_value', models.CharField(blank=True, help_text='Value for string-type settings.', max_length=255, null=True)),
                ('boolean_value', models.BooleanField(blank=True, help_text='Value for boolean-type settings.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FurnitureModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the module/product.', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('length_mm', models.DecimalField(decimal_places=2, default=0.0, help_text='Overall length of the module in mm.', max_digits=10)),
                ('width_mm', models.DecimalField(decimal_places=2, default=0.0, help_text='Overall width of the module in mm.', max_digits=10)),
                ('height_mm', models.DecimalField(decimal_places=2, default=0.0, help_text='Overall height of the module in mm.', max_digits=10)),
                ('constraints', models.JSONField(blank=True, default=dict, help_text="Module-specific constraints (e.g., {'INTERNAL_GAP': 5}). These override global settings.", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name for the material.', max_length=255, unique=True)),
                ('material_type', models.CharField(choices=[('wood_sheet', 'Wood Sheet'), ('edge_band', 'Edge Band'), ('hardware', 'Hardware'), ('other', 'Other')], default='wood_sheet', max_length=50)),
                ('length_mm', models.DecimalField(blank=True, decimal_places=2, help_text="Length of material sheet in mm (for 'wood_sheet').", max_digits=10, null=True)),
                ('width_mm', models.DecimalField(blank=True, decimal_places=2, help_text="Width of material sheet in mm (for 'wood_sheet').", max_digits=10, null=True)),
                ('thickness_mm', models.DecimalField(blank=True, decimal_places=2, help_text='Thickness of material in mm.', max_digits=10, null=True)),
                ('cost_price', models.DecimalField(decimal_places=2, help_text='Cost price per unit (sheet, meter, piece).', max_digits=10)),
                ('sell_price', models.DecimalField(decimal_places=2, help_text='Selling price per unit (sheet, meter, piece).', max_digits=10)),
                ('unit_of_measure', models.CharField(default='sheet', help_text="e.g., 'sheet', 'meter', 'piece'.", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FurnitureModuleComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of this specific component (e.g., 'Left Side Panel').", max_length=255)),
                ('part_thickness_mm', models.DecimalField(blank=True, decimal_places=2, help_text='Fixed thickness of this part in mm, if not derived.', max_digits=10, null=True)),
                ('wastage_factor', models.DecimalField(decimal_places=2, default=0.0, help_text='Additional wastage factor for this component (e.g., 0.05 for 5%).', max_digits=5)),
                ('length_formula', models.CharField(default='0.0', help_text="Formula for part length in mm (e.g., 'L - (2 * INTERNAL_WALL_THICKNESS)').", max_length=500)),
                ('width_formula', models.CharField(default='0.0', help_text="Formula for part width in mm (e.g., 'W / 2 - INTERNAL_GAP').", max_length=500)),
                ('quantity_formula', models.CharField(default='1', help_text="Formula for quantity needed for this module (e.g., '2', 'H / SHELF_SPACING').", max_length=500)),
                ('purchase_cost_per_unit_formula', models.CharField(default='material.cost_price / MM_TO_SQFT_FACTOR', help_text="Formula for material purchase cost per sq.mm. 'material' object is available.", max_length=500)),
                ('sell_price_per_unit_formula', models.CharField(default='material.sell_price / MM_TO_SQFT_FACTOR', help_text="Formula for material selling price per sq.mm. 'material' object is available.", max_length=500)),
                ('labor_cost_formula', models.CharField(default='(L * W / MM_TO_SQFT_FACTOR) * STANDARD_LABOR_RATE_PER_SQFT', help_text='Formula for total labor cost for one component.', max_length=500)),
                ('hardware_cost_formula', models.CharField(default='0.0', help_text='Formula for total hardware cost for one component.', max_length=500)),
                ('edge_band_cost_formula', models.CharField(default='(2 * L + 2 * W) / MM_TO_METER_FACTOR * material.cost_price', help_text='Formula for total edge banding cost for one component.', max_length=500)),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Order of this component within the module (for display purposes).', null=True)),
                ('module', models.ForeignKey(help_text='The module this component belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='furnituremodulecomponents', to='pmodular.furnituremodule')),
                ('material', models.ForeignKey(help_text="Material for this component (e.g., 'White Oak Sheet 18mm').", on_delete=django.db.models.deletion.PROTECT, to='pmodular.productmaterial')),
            ],
            options={
                'verbose_name': 'Furniture Module Component',
                'verbose_name_plural': 'Furniture Module Components',
                'ordering': ['order', 'name'],
            },
        ),
    ]
